/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////// DIRECTIVES /////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# ifndef SIMDSORT_H
# define SIMDSORT_H

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////// DEFINITIONS /////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int main(int argc, char** argv);

void getParams (int argc, char** argv, char* iValue, char* oValue, char* nValue, char* dValue);

float** chargeSequence (char* inputName, int N);

float** sequenceMalloc (int N);

void loadSequence (float* sequences, __m128* A, __m128* B, __m128* C, __m128* D);

void storeSequence (float* sequence, __m128 WF, __m128 XF, __m128 YF, __m128 ZF);

void inRegister (__m128 A, __m128 B, __m128 C, __m128 D, __m128* W, __m128* X, __m128* Y, __m128* Z);

void BMN (__m128 W_F, __m128 X_F, __m128 Y_F, __m128 Z_F, __m128* WF, __m128* XF, __m128* YF, __m128* ZF);

void print16Sequence (float* sequence);

int isInteger (char* input);

int exist (char* fileName);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# endif